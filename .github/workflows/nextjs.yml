# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: deploy CI

on:
  push:
    branches: [ main ]

jobs:
    # Builds a Docker Image and pushes it to Github Container Registry
    push_to_github_container_registry:
        name: Push to GHCR
        runs-on: ubuntu-latest

        # use the backend folder as the default working directory for the job
        defaults:
            run:
                working-directory: ./

        steps:
            # Checkout the Repository
            - name: Checking out the repository
              uses: actions/checkout@v2

            # Setting up Docker Builder
            - name: Set up Docker Builder
              uses: docker/setup-buildx-action@v1

            # Set Github Access Token with "write:packages & read:packages" scope for Github Container Registry.
            # Then go to repository setings and add the copied token as a secret called "CR_PAT"
            # https://github.com/settings/tokens/new?scopes=repo,write:packages&description=Github+Container+Registry
            - name: Logging into GitHub Container Registry
              uses: docker/login-action@v1
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.CR_PAT }}

            # Push to Github Container Registry
            - name: Pushing Image to Github Container Registry
              uses: docker/build-push-action@v2
              with:
                  context: ./
                  file: Dockerfile
                  push: true
                  tags: ghcr.io/${{ github.repository }}:latest
    deploy_to_aws:
        name: Deploy to AWS EC2
        runs-on: ubuntu-latest
        needs: push_to_github_container_registry

        steps:
            - name: Deploy to AWS EC2 via SSH action
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  key: ${{ secrets.PRIVATE_KEY }}
                  port: 22
                  script: |
                      docker rm howlcity-marketplace
                      docker kill howlcity-marketplace
                      # Free up space
                      docker system prune -a
                      # Login to Github Container Registry
                      docker login https://ghcr.io -u ${{ github.repository_owner }} -p ${{ secrets.CR_PAT }}
                      # Pull the Docker Image 
                      docker pull ghcr.io/${{ github.repository }}:latest
                      # Run a new container from a new image
                      docker run --name howlcity-marketplace -d -it -p 9106:80 -t ghcr.io/${{ github.repository }}:latest